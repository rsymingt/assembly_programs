00008000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.15.04
Created On: 10/26/2016 4:37:36 PM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      :
00000000                             3  * Written by :
00000000                             4  * Date       :
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00008000                             7      ORG    $8000
00008000                             8  START:                  ; first instruction of program
00008000                             9  
00008000                            10  * Put program code here
00008000                            11  
00008000  207C 00009000             12          MOVEA.L #ARRAY,A0
00008006                            13  
00008006  103C 0000                 14          MOVE.B #0,D0
0000800A                            15      
0000800A  0C00 0002                 16  LOOP1   CMPI.B #2,D0
0000800E  6E00 0046                 17          BGT    EXIT
00008012                            18      
00008012  123C 0001                 19          MOVE.B #1,D1
00008016  D200                      20          ADD.B  D0,D1
00008018  0C41 0003                 21  LOOP2   CMPI   #3,D1
0000801C  6E00 0034                 22          BGT    LEND
00008020                            23      
00008020  3400                      24          MOVE.W D0,D2
00008022  C4FC 0004                 25          MULU.W #4,D2
00008026  D441                      26          ADD.W  D1,D2 ;stores location of matrix[i][j]
00008028                            27          
00008028  13F0 2000 00009010        28          MOVE.B (A0,D2),TEMP ;stores matrix[i][j] in temp
00008030                            29          
00008030  3601                      30          MOVE.W D1,D3
00008032  C6FC 0004                 31          MULU.W #4,D3
00008036  D640                      32          ADD.W  D0,D3 ;stores location of matrix[j][i]
00008038                            33          
00008038  11B0 3000 2000            34          MOVE.B (A0,D3),(A0,D2) ;puts value at matrix[j][i] int matrix[i][j]
0000803E  11B9 00009010 3000        35          MOVE.B TEMP,(A0,D3) ;puts temp into matrix[j][i]
00008046                            36          
00008046  1830 2000                 37          MOVE.B (A0,D2),D4
0000804A  1A30 3000                 38          MOVE.B (A0,D3),D5
0000804E                            39      
0000804E  5201                      40          ADD.B #1,D1
00008050  60C6                      41          BRA LOOP2
00008052  5200                      42  LEND    ADD.B #1,D0
00008054  60B4                      43          BRA LOOP1
00008056                            44          
00008056  4E4E                      45  EXIT    TRAP #14
00008058                            46  
00009000                            47      ORG $9000
00009000= 01 02 03 04               48  ARRAY DC.B 1,2,3,4
00009004= 05 06 07 08               49      DC.B 5,6,7,8
00009008= 09 0A 0B 0C               50      DC.B 9,10,11,12
0000900C= 0D 0E 0F 10               51      DC.B 13,14,15,16
00009010                            52  TEMP DS.B 1
00009011                            53  
00009012  FFFF FFFF                 54      SIMHALT             ; halt simulator
00009016                            55  
00009016                            56  * Put variables and constants here
00009016                            57  
00009016                            58      END    START        ; last line of source

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ARRAY               9000
EXIT                8056
LEND                8052
LOOP1               800A
LOOP2               8018
START               8000
TEMP                9010
